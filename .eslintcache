[{"/home/joel/Desktop/projects/road_planner/src/index.js":"1","/home/joel/Desktop/projects/road_planner/src/App.js":"2","/home/joel/Desktop/projects/road_planner/src/components/Map.js":"3","/home/joel/Desktop/projects/road_planner/src/components/mapSetUp.js":"4","/home/joel/Desktop/projects/road_planner/src/components/PlannerForm.js":"5","/home/joel/Desktop/projects/road_planner/src/components/calculateRoute.js":"6","/home/joel/Desktop/projects/road_planner/src/components/RoadData.js":"7"},{"size":219,"mtime":1607086109516,"results":"8","hashOfConfig":"9"},{"size":490,"mtime":1607086109516,"results":"10","hashOfConfig":"9"},{"size":634,"mtime":1607086109516,"results":"11","hashOfConfig":"9"},{"size":665,"mtime":1607086623822,"results":"12","hashOfConfig":"9"},{"size":1633,"mtime":1607086109516,"results":"13","hashOfConfig":"9"},{"size":3590,"mtime":1607086666890,"results":"14","hashOfConfig":"9"},{"size":334,"mtime":1607082442305,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"judc19",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/joel/Desktop/projects/road_planner/src/index.js",[],["33","34"],"/home/joel/Desktop/projects/road_planner/src/App.js",[],"/home/joel/Desktop/projects/road_planner/src/components/Map.js",["35","36"],"import React, { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport setUp from \"./mapSetUp\";\n\nconst MapContainer = styled.div`\n  width: 100vw;\n  height: 100vh;\n`;\n\nconst Map = (props) => {\n  const setMap = props.map;\n  const setPlatform = props.platform;\n  const [loading, setLoading] = useState(true);\n  const mapRef = useRef();\n\n  useEffect(() => {\n    setLoading(true);\n    const data = setUp(mapRef);\n    setMap(data.map);\n    setPlatform(data.platform);\n    setLoading(false);\n  }, []);\n\n  return <MapContainer ref={mapRef} className=\"mapContainer\"></MapContainer>;\n};\n\nexport default Map;\n","/home/joel/Desktop/projects/road_planner/src/components/mapSetUp.js",[],"/home/joel/Desktop/projects/road_planner/src/components/PlannerForm.js",["37","38"],"import React, { useRef } from \"react\";\nimport styled from \"styled-components\";\nimport calculateRoute from \"./calculateRoute\";\n\nconst Form = styled.div`\n  position: absolute;\n  background: white;\n  width: 100%;\n  padding: 10px;\n  bottom: 0;\n  z-index: 1;\n  .locations {\n    input {\n      padding: 5px;\n      margin-left: 5px;\n      margin-bottom: 10px;\n      border-radius: 5px;\n      text-transform: capitalize;\n    }\n    button {\n      margin-left: 5px;\n      padding: 5px;\n      border-radius: 5px;\n      font-weight: bold;\n    }\n  }\n  table {\n    display: none;\n  }\n`;\n\nconst PlannerForm = (props) => {\n  const platform = props.platform;\n  const map = props.map;\n  const startWayPoint = useRef();\n  const destinationWayPoint = useRef();\n  const table = useRef();\n\n  const onSubmit = () => {\n    if (startWayPoint.current.value == \"\" || destinationWayPoint.current.value == \"\") alert(\"All fields required\");\n    else calculateRoute(map, platform, startWayPoint, destinationWayPoint, table);\n  };\n\n  return (\n    <Form>\n      <div className=\"locations\">\n        <input type=\"text\" ref={startWayPoint} placeholder=\"Choose starting point...\" />\n        <input type=\"text\" ref={destinationWayPoint} placeholder=\"Choose destination...\" />\n        <button type=\"submit\" onClick={onSubmit}>\n          Submit\n        </button>\n      </div>\n      <table id=\"table\" ref={table}>\n        <thead>\n          <tr>\n            <th>From</th>\n            <th>To</th>\n            <th>Distance</th>\n            <th>Duration</th>\n          </tr>\n        </thead>\n        <tbody></tbody>\n      </table>\n    </Form>\n  );\n};\n\nexport default PlannerForm;\n","/home/joel/Desktop/projects/road_planner/src/components/calculateRoute.js",[],"/home/joel/Desktop/projects/road_planner/src/components/RoadData.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":13,"column":10,"nodeType":"45","messageId":"46","endLine":13,"endColumn":17},{"ruleId":"47","severity":1,"message":"48","line":22,"column":6,"nodeType":"49","endLine":22,"endColumn":8,"suggestions":"50"},{"ruleId":"51","severity":1,"message":"52","line":40,"column":37,"nodeType":"53","messageId":"54","endLine":40,"endColumn":39},{"ruleId":"51","severity":1,"message":"52","line":40,"column":80,"nodeType":"53","messageId":"54","endLine":40,"endColumn":82},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setMap' and 'setPlatform'. Either include them or remove the dependency array.","ArrayExpression",["57"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"58","fix":"59"},"Update the dependencies array to be: [setMap, setPlatform]",{"range":"60","text":"61"},[526,528],"[setMap, setPlatform]"]